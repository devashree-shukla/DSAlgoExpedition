func bucketSort(array: [Float]) -> [Float] {
    guard !array.isEmpty else { return [] }

    // Create empty buckets
    var buckets: [[Float]] = Array(repeating: [], count: array.count)

    // Insert elements into buckets
    for element in array {
        let bucketIndex = Int(element * Float(array.count))
        buckets[bucketIndex].append(element)
    }

    // Sort buckets and concatenate
    return buckets.flatMap { bucket in
        bucket.sorted()
    }
}

print(bucketSort(array: [0.79, 0.13, 0.64, 0.39, 0.20, 0.89, 0.53, 0.42, 0.06, 0.94]))

print(bucketSort(array: [0.79, 0.13, 0.64, 0.39, 0.20, 0.89, 0.53, 0.42, 0.06, 0.94, 0.75, 0.73]))

//Output:
//[0.06, 0.13, 0.2, 0.39, 0.42, 0.53, 0.64, 0.79, 0.89, 0.94]
//[0.06, 0.13, 0.2, 0.39, 0.42, 0.53, 0.64, 0.73, 0.75, 0.79, 0.89, 0.94]